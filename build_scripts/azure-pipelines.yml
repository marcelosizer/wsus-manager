trigger:
  - master

name: 'wsus-manager'

variables:
  major: 1
  minor: 4
  patch: $(Build.BuildID)
  buildVer: $(major).$(minor).$(Build.BuildID)

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: PowerShell@2
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/build_scripts/build.ps1'
    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: '$(System.DefaultWorkingDirectory)/wsus-manager.nuspec'
        versioningScheme: byEnvVar
        versionEnvVar: buildVer
        buildProperties: 'VERSIONHERE=$(buildVer)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'NuGetPackage'
        publishLocation: 'Container'
- stage: Test
  jobs:
  - job: Test
    steps:
    - task: Pester@10
      inputs:
        scriptFolder: "@{Path='$(System.DefaultWorkingDirectory)/wsus-manager.Tests.ps1'}"
        resultsFile: "$(System.DefaultWorkingDirectory)/wsus-manager.Tests.XML"
        usePSCore: false
        run32Bit: False
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: "NUnit"
        testResultsFiles: "$(System.DefaultWorkingDirectory)/wsus-manager.Tests.XML"
        failTaskOnFailedTests: true
- stage: Deploy
  jobs:
  - job: Deploy
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          artifactName: 'NuGetPackage'
          itemPattern: '**'
          targetPath: '$(Pipeline.Workspace)'
      - task: ArtifactoryNuGet@1
        inputs:
          command: 'push'
          artifactoryService: 'Artifactory Nuget'
          targetDeployRepo: 'nuget-local'
          pathToNupkg: '$(Build.ArtifactStagingDirectory)\NuGetPackage\*.nupkg'
          collectBuildInfo: true
          buildName: '$(Build.DefinitionName)'
          buildNumber: '$(Build.BuildNumber)'
